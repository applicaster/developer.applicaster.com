---
"Access & Authorization Solutions":
- folder: authorization-provider
  internal: false
  title: Authorization Provider Service
  description: >
    The authorization provider service, gives the ability to grant/deny
    end user access to content, through external authorization systems.
    This product aims to allow customers to connect any type of
    'entry pass' to their content
  type: Technical
  tags: JWT
  owner: lirzi

"Feed":
- folder: ios-feed-integration
  internal: false
  title: iOS Feed Integration
  description: >
    This document serves an integration guide for Applicaster iOS SDK into a
    new app and adding Feed activity button. This guide accompanies an iOS
    project that implements this integration and can be used as a reference
    implementation.
  type: Technical
  owner: udi

- folder: android-feed-integration
  internal: false
  title: Android Feed Integration
  description: >
    This document serves an integration guide for Applicaster Android SDK into a
    new app and adding Feed activity button. This guide accompanies an Android
    project that implements this integration and can be used as a reference
    implementation.
  type: Technical
  owner: udi

- folder: feed-public-api
  internal: false
  title: Feed Public API
  description: >
    This document describes the Stars public API and it is used to read events
    form the Feed product.
  type: Technical
  owner: udi

"Crossmates":
- folder: ios-crossmates-integration
  internal: false
  title: iOS Crossmates Integration
  description: >
    This document serves an integration guide for Applicaster iOS SDK into a new app
    and adding Crossmates activity button. This guide accompanies an iOS project that
    implements this integration and can be used as a reference implementation.
  type: Technical
  owner: udi

- folder: android-crossmates-integration
  internal: false
  title: Android Crossmates Integration
  description: >
    This document serves an integration guide for Applicaster Android SDK into a new app
    and adding Crossmates activity button. This guide accompanies an Android project that
    implements this integration and can be used as a reference implementation.
  type: Technical
  owner: udi

"Questions":
#- folder: ultimate-questions-api
#internal: false

- folder: on-screen-graphics-reports
  internal: false
  title: On Screen Graphics Reports
  description: >
    The Applicaster Widgets provide end-users with interaction and engagement based around
    the broadcaster's content. The reports of these interactions can be easily exported to
    on-screen graphics providers. This document gives background to our widgets product
    and explanation as to how to use and export the reports. 
  type: Technical
  owner: Gavri

"App Integration":
- folder: js2native
  internal: false
  title: js2native
  description: >
    The Applicaster.JS2Native SDK provides access to native capabilities in
    WebViews running inside applicaster's native apps.

- folder: android-applicaster-sdk-integration
  internal: false
  title: Android Applicatser SDK Integration
  description: >
    This document serves as an integration guide for Applicaster Android SDK into a new app
  type: Technical
  owner: ?


"Zapp":

"Content Ingestion":
- folder: epg-ingestion
  internal: false
  title: EPG Ingestion
  description: >
    Applicaster provides an ingestion mechanism for importing a channel's EPG.
    You can set for each channel in the app its own ingestion URL. This URL should
    hold a JSON file that contains a list of programs to add/update to the EPG.
  type: Technical
  owner: ?

- folder: media-atom
  internal: false
  title: Media ATOM Ingestion
  description: >
    Applicaster Media Atom Feed is a feature that
    allows the broadcaster to integrate list of
    External resources and present them in the app.
    Currently Applicaster supports three kinds of
    resource types: article, image and
    imageGallery.
  type: Technical
  owner: ?

- folder: vod-ingestion-rss
  internal: false
  title: VOD Ingestion Via RSS
  description: >
    The VOD RSS ingestion process is meant to load video assets to Applicaster’s systems.  
    This works by configuring a URL in Applicaster’s CMS that will be queried regularly.  
    Each Category built on Applicaster's CMS (Show or Season nature), can be configured with   
    it's own URL, defining her belonging VOD's.
  type: Technical
  owner: ?

- folder: vod-ingestion-xml
  internal: false
  title: VOD Ingestion Via XML
  description: >
    The VOD XML ingestion process loads assets to Applicaster’s CMS.
    This works by configuring an HTTP(s) URL in the CMS that will be queried regularly.
  type: Technical
  owner: ?

#"Developer Documentation"
#- folder: docs-how-to
#  internal: true
#  title: How To Write Docs
