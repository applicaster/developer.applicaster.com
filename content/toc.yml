---
"Access & Authorization Solutions":
- folder: authorization-provider
  internal: false
  title: Authorization Provider Service
  description: >
    The authorization provider service, gives the ability to grant/deny
    end user access to content, through external authorization systems.
    This product aims to allow customers to connect any type of
    'entry pass' to their content.
  type: Technical
  tags: JWT
  owner: l.deutsch@applicaster.com

"Feed":
- folder: feed-release-notes
  internal: false
  title: Feed Release Notes
  description: >
    Release notes list of the Feed product ordered by release date.
  type: Release Notes
  owner: u.lumnitz@applicaster.com

- folder: ios-feed-integration
  internal: false
  title: iOS Feed Integration
  description: >
    This document describes how to integrate Applicaster iOS Feed SDK to an external
    iOS App.
  type: Technical
  owner: u.lumnitz@applicaster.com

- folder: android-feed-integration
  internal: false
  title: Android Feed Integration
  description: >
    This document describes how to integrate Applicaster Android Feed SDK to an external
    iOS App.
  type: Technical
  owner: u.lumnitz@applicaster.com

- folder: feed-public-api
  internal: false
  title: Feed Public API
  description: >
    This document describes the Stars public API. Using this API a client will be able to
    consume events form the Feed product.
  type: Technical
  owner: u.lumnitz@applicaster.com

- folder: group-chat-setup
  internal: false
  title: Group Chat Setup
  description: >
    This document describes how to configure the group chat link per customer/timeline, and how to customize the group chat from Stars.
  type: Technical
  owner: l.deutsch@applicaster.com

"Crossmates":
- folder: ios-crossmates-integration
  internal: false
  title: iOS Crossmates Integration
  description: >
    This document describes how to integrate Applicaster iOS Crossmates SDK to an external
    iOS App.
  type: Technical
  owner: u.lumnitz@applicaster.com

- folder: android-crossmates-integration
  internal: false
  title: Android Crossmates Integration
  description: >
    This document describes how to integrate Applicaster Android Crossmates SDK to an external
    Android App.
  type: Technical
  owner: u.lumnitz@applicaster.com

"Questions":
- folder: questions-sdks
  internal: false
  title: Questions Editor & Client SDKs
  description: >
    This document describes how to develp new templates questions using Applicaster
    javascript SDKS.
  type: Technical
  owner: g.guy@applicaster.com

- folder: on-screen-graphics-reports
  internal: false
  title: On Screen Graphics Reports
  description: >
    The Applicaster Widgets provide end-users with interaction and engagement based around
    the broadcaster's content. The reports of these interactions can be easily exported to
    on-screen graphics providers. This document gives background to our widgets product
    and explanation as to how to use and export the reports. 
  type: Technical
  owner: g.guy@applicaster.com

"App Integration":
- folder: js2native
  internal: false
  title: js2native
  description: >
    The Applicaster.JS2Native SDK provides access to native capabilities in
    WebViews running inside applicaster's native apps.
  type: Technical
  owner: g.guy@applicaster.com

- folder: android-applicaster-sdk-integration
  internal: false
  title: Android Applicaster SDK Integration
  description: >
    This document describes how to integrate Applicaster Android SDK to your
    iOS App.
  type: Technical
  owner: u.lumnitz@applicaster.com


"Zapp":
- folder: zapp-release-notes
  internal: true
  title: Zapp Release Notes
  description: >
    Release notes list of the Zapp product ordered by release date.
  type: Release Notes
  owner: g.guy@applicaster.com

"Content Ingestion":
- folder: epg-ingestion
  internal: false
  title: EPG Ingestion
  description: >
    Applicaster provides an ingestion mechanism for importing a channel's EPG.
    You can set for each channel in the app its own ingestion URL. This URL should
    hold a JSON file that contains a list of programs to add/update to the EPG.
  type: Technical
  owner: n.friedman@applicaster.com

- folder: media-atom
  internal: false
  title: Media ATOM Ingestion
  description: >
    Applicaster Media Atom Feed is a feature that
    allows the broadcaster to integrate list of
    External resources and present them in the app.
    Currently Applicaster supports three kinds of
    resource types: article, image and
    imageGallery.
  type: Technical
  owner: p.kramarov@applicaster.com

- folder: vod-ingestion-rss
  internal: false
  title: VOD Ingestion Via RSS
  description: >
    The VOD RSS ingestion process is meant to load video assets to Applicaster’s systems.
    This works by configuring a URL in Applicaster’s CMS that will be queried regularly.
    Each Category built on Applicaster's CMS (Show or Season nature), can be configured with
    it's own URL, defining her belonging VOD's.
  type: Technical
  owner: n.friedman@applicaster.com

- folder: vod-ingestion-xml
  internal: false
  title: VOD Ingestion Via XML
  description: >
    The VOD XML ingestion process loads assets to Applicaster’s CMS.
    This works by configuring an HTTP(s) URL in the CMS that will be queried regularly.
  type: Technical
  owner: n.friedman@applicaster.com

"Developer Documentation":
- folder: docs-how-to
  internal: true
  title: How To Write and publish Docs
  description: >
    This doc describes how to write and publish new and exitsing documents.
  type: Technical
  owner: g.guy@applicaster.com
- folder: docs-styleguide
  internal: true
  title: Docs Style Guide
  description: >
    Learn how to write docs using the Markdown format and see an example of how
    the styling take affect on the site.
  type: Technical
  owner: g.guy@applicaster.com

"AIS":
- folder: ais-api
  internal: true
  title: AIS API 1.0
  description: >
    This document outlines how to work with the AIS API
  type: Technical
  owner: y.osteen@applicaster.com
